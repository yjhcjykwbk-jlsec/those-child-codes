import java.io.*;

import test.Operator;
import visitor.*;
import java.util.*;
public class main {
     static public void main(String args[]){
    	 syntaxtree.Goal goal;
    	 types.TypeTable table;
    	 CreateTableVisit tablevisitor;
    	 TypeCheckVisit   checkvisitor;
    	 PigletVisit      pigletvisitor;
    	 MiniJavaParser ap;
    	
    	FileReader file;int i=10;
    	while(i<100){
    	 try
    	 {
    	 //System.out.println("case");
    	 file=new FileReader("./src/test/test"+i+".java");
    	 if(i==10) ap=new MiniJavaParser(file);
    	 else MiniJavaParser.ReInit(file);
    	 goal=MiniJavaParser.Goal();
    	 System.out.println("create");
    	 table=new types.TypeTable();
    	 tablevisitor=new CreateTableVisit(table);
    	 tablevisitor.visit(goal);
    	 System.out.println("check");
    	 checkvisitor=new TypeCheckVisit(table);
    	 Object a=new Object();
    	 checkvisitor.visit(goal, a);
    	 System.out.println("piglet");
    	 pigletvisitor=new PigletVisit(table);
    	 pigletvisitor.visit(goal);
    	 }
    	 catch(ParseException e)
    	 {
    		 System.out.println(e.getMessage());
    	 }
    	 catch(FileNotFoundException eee){System.out.println("not found");}
    	 catch(Exception eee){System.out.println("find error before piglet");}
    	 i++;
    	 class test10{
    		    public static void main(String[] a){
    			System.out.println(new Operator().compute());
    		    }
    		}

    		class Operator{
    		    
    		    boolean op1bool;
    		    boolean op2bool;
    		    int op1int;
    		    int op2int;
    		    int result;

    		    public int compute(){

    			op1int = 10;
    			op2int = 20;
    			result = op1int * op2int;

    			return 0;
    		    }
    		}
    		System.out.println();	System.out.println();
    	 System.out.println("case "+i);
    	
    	 }
    	 
     }
}