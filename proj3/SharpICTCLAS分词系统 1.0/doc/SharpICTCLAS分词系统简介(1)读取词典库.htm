<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn" />
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
<title>SharpICTCLAS分词系统简介(1)读取词典库</title>
<link href="css/style.css" rel="stylesheet" type="text/css" />
<link href="css/customercss.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">/*<![CDATA[*/
if(typeof(HTMLElement)!="undefined" && !window.opera)
{
  HTMLElement.prototype.__defineGetter__("parentElement", function () 
  {
    if (this.parentNode == this.ownerDocument) return null;
    return this.parentNode;
  });
}

HTMLElement.prototype.innerHTML getter = function(){
   return getInnerHTML(this);
}
/*]]>*/
</script>
<script language="javascript">
function CopyCode(key)
{
  var divElements = document.getElementsByTagName("div");
  var i;
  occur = 0;  
  for(i = 0; i < divElements.length; ++i)
  {
    if(key.parentElement.parentElement.parentElement == divElements[i].parentElement)
    {
      if(occur == 1)
      {
        if(navigator.appName.indexOf('Microsoft') != -1)
          copyToClipboard(divElements[i].innerText);
        else
          copyToClipboard(Html2Txt(divElements[i].innerHTML));
      }
      occur++;
    }
  }
}
function Html2Txt(htmlText)
{
  str = htmlText.replace(/\r\n/g, " ");
  str = str.replace(/\r/g, " "); 
  str = str.replace(/\n/g, " "); 
  str = str.replace(/\t/g, "");
  str = str.replace(/<BR>/gi,"\r\n");
  str = str.replace(/<[^>]+?>/g,"");
  str = str.replace(/&nbsp;/g, " ");
  str = str.replace(/&gt;/g, ">");
  str = str.replace(/&lt;/g, "<");
  str = str.replace(/&amp;/g, "&");
  return str;
}

function copyToClipboard(txt)
{
 if(window.clipboardData) 
  {
    window.clipboardData.clearData();
    window.clipboardData.setData("Text", txt);
  }
  else if(navigator.userAgent.indexOf("Opera") != -1) 
  {
    window.location = txt;
  } 
  else if (window.netscape) 
  {
    try 
    {
      netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
    } 
    catch (e) 
    {
      alert("您的firefox安全限制限制您进行剪贴板操作，请在地址栏中输入“about:config”将“signed.applets.codebase_principal_support”设置为“true”之后重试");
      return false;
    }
    var clip = Components.classes['@mozilla.org/widget/clipboard;1'].createInstance(Components.interfaces.nsIClipboard);
    if (!clip)
      return;
    var trans = Components.classes['@mozilla.org/widget/transferable;1'].createInstance(Components.interfaces.nsITransferable);
    if (!trans)
      return;
    trans.addDataFlavor('text/unicode');
    var str = new Object();
    var len = new Object();
    var str = Components.classes["@mozilla.org/supports-string;1"].createInstance(Components.interfaces.nsISupportsString);
    var copytext = txt;
    str.data = copytext;
    trans.setTransferData("text/unicode",str,copytext.length*2);
    var clipid = Components.interfaces.nsIClipboard;
    if (!clip)
      return false;
    clip.setData(trans,null,clipid.kGlobalClipboard);
  }
} 
</script>
</head>

<body>

<p>　</p>
<table width="95%" align="center">
	<tr>
		<td>
		<p>ICTCLAS分词的总体流程包括：1）初步分词；2）词性标注；3）人名、地名识别；4）重新分词；5）重新词性标注这五步。就第一步分词而言，又细分成：1）原子切分；2）找出原子之间所有可能的组词方案；3）N-最短路径中文词语粗分三步。</p>
		<p>在所有内容中，词典库的读取是最基本的功能。ICTCLAS中词典存放在Data目录中，常用的词典包括coreDict.dct（词典库）、BigramDict.dct（词与词间的关联库）、nr.dct（人名库）、ns.dct（地名库）、tr.dct（翻译人名库），它们的文件格式是完全相同的，都使用CDictionary类进行解析。如果想深入了解ICTCLAS词典结构，可以参考sinboy的《<a href="http://blog.csdn.net/sinboy/archive/2006/03/15/624909.aspx">ICTCLAS分词系统研究（二）--词典结构</a>》一文，详细介绍了词典结构。我这里只给出SharpICTCLAS中的实现。</p>
		<p>首先是对基本元素的定义。在SharpICTCLAS中，对原有命名进行了部分调整，使得更具有实际意义并适合C#的习惯。代码如下：</p>
		<div class="code">
			<div class="title">
				<div style="FLOAT: right">
					<img class="copyCodeImage" src="images/copycode.gif" align="absMiddle" name="ccImage">
					<a onclick="CopyCode(this)" href="javascript:">Copy Code</a></div>
				<div style="CLEAR: none">
					WordDictionaryElement.cs 程序</div>
			</div>
			<div class="content">
				<span style="COLOR: #0000ff">using</span> System; <br>
				<span style="COLOR: #0000ff">using</span> System.Collections.Generic;
				<br>
				<span style="COLOR: #0000ff">using</span> System.Text; <br>
				<br>
				<span style="COLOR: #0000ff">namespace</span> SharpICTCLAS <br>
				{ <br>
&nbsp;&nbsp; <span style="COLOR: #008000">//==================================================
				</span><br>
&nbsp;&nbsp; <span style="COLOR: #008000">// Original predefined in DynamicArray.h 
				file </span><br>
&nbsp;&nbsp; <span style="COLOR: #008000">//==================================================
				</span><br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">class</span> ArrayChainItem <br>
&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">int</span> col, row;<span style="COLOR: #008000">//row 
				and column </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">double</span>
				<span style="COLOR: #0000ff">value</span>;<span style="COLOR: #008000">//The 
				value of the array </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">int</span> nPOS; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">int</span> nWordLen; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">string</span> sWord; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #008000">//The possible POS of 
				the word related to the segmentation graph </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span> ArrayChainItem 
				next; <br>
&nbsp;&nbsp; } <br>
				<br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">class</span> WordResult <br>
&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #008000">//The word&nbsp;
				</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">string</span> sWord; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #008000">//the POS of the word
				</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">int</span> nPOS; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #008000">//The -log(frequency/MAX)
				</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">double</span> dValue; <br>
&nbsp;&nbsp; } <br>
				<br>
&nbsp;&nbsp; <span style="COLOR: #008000">//--------------------------------------------------
				</span><br>
&nbsp;&nbsp; <span style="COLOR: #008000">// data structure for word item </span>
				<br>
&nbsp;&nbsp; <span style="COLOR: #008000">//--------------------------------------------------
				</span><br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">class</span> WordItem <br>
&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">int</span> nWordLen; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #008000">//The word&nbsp;
				</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">string</span> sWord; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #008000">//the process or information 
				handle of the word </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">int</span> nPOS; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #008000">//The count which it 
				appear </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">int</span> nFrequency; <br>
&nbsp;&nbsp; } <br>
				<br>
&nbsp;&nbsp; <span style="COLOR: #008000">//--------------------------------------------------
				</span><br>
&nbsp;&nbsp; <span style="COLOR: #008000">//data structure for dictionary index 
				table item </span><br>
&nbsp;&nbsp; <span style="COLOR: #008000">//--------------------------------------------------
				</span><br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">class</span> IndexTableItem <br>
&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #008000">//The count number of 
				words which initial letter is sInit </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">int</span> nCount; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #008000">//The&nbsp; head of 
				word items </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span> WordItem[] 
				WordItems; <br>
&nbsp;&nbsp; } <br>
				<br>
&nbsp;&nbsp; <span style="COLOR: #008000">//--------------------------------------------------
				</span><br>
&nbsp;&nbsp; <span style="COLOR: #008000">//data structure for word item chain
				</span><br>
&nbsp;&nbsp; <span style="COLOR: #008000">//--------------------------------------------------
				</span><br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">class</span> WordChain <br>
&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span> WordItem 
				data; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span> WordChain 
				next; <br>
&nbsp;&nbsp; } <br>
				<br>
&nbsp;&nbsp; <span style="COLOR: #008000">//--------------------------------------------------
				</span><br>
&nbsp;&nbsp; <span style="COLOR: #008000">//data structure for dictionary index 
				table item </span><br>
&nbsp;&nbsp; <span style="COLOR: #008000">//--------------------------------------------------
				</span><br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">class</span> ModifyTableItem <br>
&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #008000">//The count number of 
				words which initial letter is sInit </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">int</span> nCount; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #008000">//The number of deleted 
				items in the index table </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">int</span> nDelete; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #008000">//The head of word items
				</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span> WordChain 
				pWordItemHead; <br>
&nbsp;&nbsp; }&nbsp; <br>
				} <br>
			</div>
		</div>
		<p>其中ModifyTableItem用于组成ModifyTable，但在实际分词时，词库往往处于“只读”状态，因此用于修改词库的ModifyTable实际上起的作用并不大。因此在后面我将ModifyTable的代码暂时省略。</p>
		<p>有了基本元素的定义后，就该定义“词典”类了。原有C++代码中所有类名均以大写的“C”打头，词典类名为CDictionary，在SharpICTCLAS中，我去掉了开头的“C”，并且为了防止和系统的Dictionary类重名，特起名为“WordDictionary”类。该类主要负责完成词典库的读、写以及检索操作。让我们看看如何读取词典库：</p>
		<div class="code">
			<div class="title">
				<div style="FLOAT: right">
					<img class="copyCodeImage" src="images/copycode.gif" align="absMiddle" name="ccImage">
					<a onclick="CopyCode(this)" href="javascript:">Copy Code</a></div>
				<div style="CLEAR: none">
					词典库的读取：</div>
			</div>
			<div class="content">
				<span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">class</span> WordDictionary <br>
				{ <br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">bool</span> bReleased =
				<span style="COLOR: #0000ff">true</span>; <br>
				<br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span> IndexTableItem[] indexTable;
				<br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span> ModifyTableItem[] modifyTable;
				<br>
				<br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">bool</span> Load(<span style="COLOR: #0000ff">string</span> 
				sFilename) <br>
&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">return</span> Load(sFilename,
				<span style="COLOR: #0000ff">false</span>); <br>
&nbsp;&nbsp; } <br>
				<br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">public</span>
				<span style="COLOR: #0000ff">bool</span> Load(<span style="COLOR: #0000ff">string</span> 
				sFilename, <span style="COLOR: #0000ff">bool</span> bReset) <br>
&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">int</span> frequency, 
				wordLength, pos;&nbsp;&nbsp; <span style="COLOR: #008000">//频率、词长、读取词性 
				</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">bool</span> isSuccess 
				= <span style="COLOR: #0000ff">true</span>; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileStream fileStream =
				<span style="COLOR: #0000ff">null</span>; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BinaryReader binReader =
				<span style="COLOR: #0000ff">null</span>; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">try</span> <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fileStream =
				<span style="COLOR: #0000ff">new</span> FileStream(sFilename, FileMode.Open, 
				FileAccess.Read); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">if</span> 
				(fileStream == <span style="COLOR: #0000ff">null</span>) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<span style="COLOR: #0000ff">return</span>
				<span style="COLOR: #0000ff">false</span>; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; binReader =
				<span style="COLOR: #0000ff">new</span> BinaryReader(fileStream, 
				Encoding.GetEncoding(<span style="COLOR: #ff00ff">&quot;gb2312&quot;</span>));
				<br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; indexTable =
				<span style="COLOR: #0000ff">new</span> IndexTableItem[Predefine.CC_NUM];
				<br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bReleased =
				<span style="COLOR: #0000ff">false</span>; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">for</span> 
				(<span style="COLOR: #0000ff">int</span> i = 0; i &lt; Predefine.CC_NUM; 
				i++) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<span style="COLOR: #008000">//读取以该汉字打头的词有多少个 </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; indexTable[i] 
				= <span style="COLOR: #0000ff">new</span> IndexTableItem(); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; indexTable[i].nCount 
				= binReader.ReadInt32(); <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<span style="COLOR: #0000ff">if</span> (indexTable[i].nCount &lt;= 
				0) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<span style="COLOR: #0000ff">continue</span>; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; indexTable[i].WordItems 
				= <span style="COLOR: #0000ff">new</span> WordItem[indexTable[i].nCount];
				<br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<span style="COLOR: #0000ff">for</span> (<span style="COLOR: #0000ff">int</span> 
				j = 0; j &lt; indexTable[i].nCount; j++) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				indexTable[i].WordItems[j] = <span style="COLOR: #0000ff">new</span> 
				WordItem(); <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				frequency = binReader.ReadInt32();&nbsp;&nbsp;
				<span style="COLOR: #008000">//读取频率 </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				wordLength = binReader.ReadInt32();&nbsp;
				<span style="COLOR: #008000">//读取词长 </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				pos = binReader.ReadInt32();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<span style="COLOR: #008000">//读取词性 </span><br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<span style="COLOR: #0000ff">if</span> (wordLength &gt; 0) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				indexTable[i].WordItems[j].sWord = Utility.ByteArray2String(binReader.ReadBytes(wordLength));
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<span style="COLOR: #0000ff">else</span> <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				indexTable[i].WordItems[j].sWord = <span style="COLOR: #ff00ff">
				&quot;&quot;</span>; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<span style="COLOR: #008000">//Reset the frequency </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<span style="COLOR: #0000ff">if</span> (bReset) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				indexTable[i].WordItems[j].nFrequency = 0; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<span style="COLOR: #0000ff">else</span> <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				indexTable[i].WordItems[j].nFrequency = frequency; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				indexTable[i].WordItems[j].nWordLen = wordLength; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				indexTable[i].WordItems[j].nPOS = pos; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">catch</span> (<span style="COLOR: #808000">Exception</span> 
				e) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(e.Message);
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; isSuccess =
				<span style="COLOR: #0000ff">false</span>; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">finally</span> <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">if</span> 
				(binReader != <span style="COLOR: #0000ff">null</span>) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; binReader.Close();
				<br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">if</span> 
				(fileStream != <span style="COLOR: #0000ff">null</span>) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fileStream.Close();
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">return</span> isSuccess;
				<br>
&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp; <span style="COLOR: #008000">//...... </span><br>
				} <br>
				<br>
			</div>
		</div>
		<p>下面内容节选自词库中CCID为2、3、4、5的单元， CCID的取值范围自1～6768，对应6768个汉字，所有与该汉字可以组成的词均记录在相应的单元内。词库中记录的词是没有首汉字的（我用带括号的字补上了），其首汉字就是该单元对应的汉字。词库中记录了词的词长、频率、词性以及词。</p>
		<p>另外特别需要注意的是<b><font color="#0000FF">在一个单元内，词是按照CCID大小排序的</font></b>！这对我们后面的分析至关重要。</p>
		<div class="code">
			<div class="title">
				<div style="FLOAT: right">
					<img class="copyCodeImage" src="images/copycode.gif" align="absMiddle" name="ccImage">
					<a onclick="CopyCode(this)" href="javascript:">Copy Code</a></div>
				<div style="CLEAR: none">
					ICTCLAS词库部分内容</div>
			</div>
			<div class="content">
				汉字:埃, ID ：2 <br>
				<br>
&nbsp; 词长&nbsp; 频率&nbsp; 词性&nbsp;&nbsp; 词 <br>
&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp; 128&nbsp;&nbsp;&nbsp; h&nbsp;&nbsp; (埃) <br>
&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; j&nbsp;&nbsp; (埃)
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp; n&nbsp;&nbsp; (埃)镑 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; 28&nbsp;&nbsp;&nbsp; ns&nbsp; (埃)镑 <br>
&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp; n&nbsp;&nbsp; (埃)菲尔 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp; 511&nbsp;&nbsp;&nbsp; ns&nbsp; (埃)及 <br>
&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp; ns&nbsp; (埃)克森 
				<br>
&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; ns&nbsp; (埃)拉特湾 
				<br>
&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp; nr&nbsp; (埃)里温 
				<br>
&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; nz&nbsp; (埃)默鲁市 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; 27&nbsp;&nbsp;&nbsp; n&nbsp;&nbsp; (埃)塞 
				<br>
&nbsp;&nbsp;&nbsp; 8&nbsp;&nbsp;&nbsp; 64&nbsp;&nbsp;&nbsp; ns&nbsp; (埃)塞俄比亚 <br>
&nbsp;&nbsp; 22&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; ns&nbsp; (埃)塞俄比亚联邦民主共和国 
				<br>
&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp;&nbsp; ns&nbsp; (埃)塞萨 
				<br>
&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp; ns&nbsp; (埃)舍德 
				<br>
&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; nr&nbsp; (埃)斯特角 
				<br>
&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; ns&nbsp; (埃)松省 
				<br>
&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp;&nbsp; nr&nbsp; (埃)特纳 
				<br>
&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; nz&nbsp; (埃)因霍温 
				<br>
				==================================== <br>
				汉字:挨, ID ：3 <br>
				<br>
&nbsp; 词长&nbsp; 频率&nbsp; 词性&nbsp;&nbsp; 词 <br>
&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 56&nbsp;&nbsp;&nbsp; h&nbsp;&nbsp; (挨)
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp; j&nbsp;&nbsp; (挨)次 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; 19&nbsp;&nbsp;&nbsp; n&nbsp;&nbsp; (挨)打 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp;&nbsp; ns&nbsp; (挨)冻 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp; n&nbsp;&nbsp; (挨)斗 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 9&nbsp;&nbsp;&nbsp; ns&nbsp; (挨)饿 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp; ns&nbsp; (挨)个 
				<br>
&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; ns&nbsp; (挨)个儿 
				<br>
&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp; 17&nbsp;&nbsp;&nbsp; nr&nbsp; (挨)家挨户 <br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp; nz&nbsp; (挨)近 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; n&nbsp;&nbsp; (挨)骂 
				<br>
&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp; ns&nbsp; (挨)门挨户 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp; ns&nbsp; (挨)批 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; ns&nbsp; (挨)整 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; 12&nbsp;&nbsp;&nbsp; ns&nbsp; (挨)着 <br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; nr&nbsp; (挨)揍 
				<br>
				==================================== <br>
				汉字:哎, ID ：4 <br>
				<br>
&nbsp; 词长&nbsp; 频率&nbsp; 词性&nbsp;&nbsp; 词 <br>
&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 10&nbsp;&nbsp;&nbsp; h&nbsp;&nbsp; (哎)
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp;&nbsp; j&nbsp;&nbsp; (哎)呀 
				<br>
&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; n&nbsp;&nbsp; (哎)哟 
				<br>
				==================================== <br>
				汉字:唉, ID ：5 <br>
				<br>
&nbsp; 词长&nbsp; 频率&nbsp; 词性&nbsp;&nbsp; 词 <br>
&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp; 9&nbsp;&nbsp;&nbsp; h&nbsp;&nbsp; (唉)
				<br>
&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp; j&nbsp;&nbsp; (唉)声叹气</div>
		</div>
		<p>在这里还应当注意的是，一个词可能有多个词性，因此一个词可能在词典中出现多次，但词性不同。若想从词典中唯一定位一个词的话，必须同时指明词与词性。</p>
		<p>另外在WordDictionary类中用到得比较多的就是词的检索，这由FindInOriginalTable方法实现。原ICTCLAS代码中该方法的实现结构比较复杂，同时考虑了多种检索需求，因此代码也相对复杂一些。在SharpICTCLAS中，我对该方法进行了重载，针对不同检索目的设计了不同的FindInOriginalTable方法，简化了程序接口和代码复杂度。其中一个FindInOriginalTable方法代码如下，实现了判断某一词性的一词是否存在功能。</p>
		<div class="code">
			<div class="title">
				<div style="FLOAT: right">
					<img class="copyCodeImage" src="images/copycode.gif" align="absMiddle" name="ccImage">
					<a onclick="CopyCode(this)" href="javascript:">Copy Code</a></div>
				<div style="CLEAR: none">
					FindInOriginalTable方法的一个重载版本</div>
			</div>
			<div class="content">
				<span style="COLOR: #0000ff">private</span>
				<span style="COLOR: #0000ff">bool</span> FindInOriginalTable(<span style="COLOR: #0000ff">int</span> 
				nInnerCode, <span style="COLOR: #0000ff">string</span> sWord,
				<span style="COLOR: #0000ff">int</span> nPOS) <br>
				{ <br>
&nbsp;&nbsp; WordItem[] pItems = indexTable[nInnerCode].WordItems; <br>
				<br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">int</span> nStart = 0, nEnd = indexTable[nInnerCode].nCount 
				- 1; <br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">int</span> nMid = (nStart + nEnd) / 2, 
				nCmpValue; <br>
				<br>
&nbsp;&nbsp; <span style="COLOR: #008000">//Binary search </span><br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">while</span> (nStart &lt;= nEnd) <br>
&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nCmpValue = Utility.CCStringCompare(pItems[nMid].sWord, 
				sWord); <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">if</span> (nCmpValue 
				== 0 &amp;&amp; (pItems[nMid].nPOS == nPOS || nPOS == -1)) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">return</span>
				<span style="COLOR: #0000ff">true</span>;<span style="COLOR: #008000">//find 
				it </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">else</span>
				<span style="COLOR: #0000ff">if</span> (nCmpValue &lt; 0 || (nCmpValue 
				== 0 &amp;&amp; pItems[nMid].nPOS &lt; nPOS &amp;&amp; nPOS != -1)) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nStart = nMid + 1; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000ff">else</span>
				<span style="COLOR: #0000ff">if</span> (nCmpValue &gt; 0 || (nCmpValue 
				== 0 &amp;&amp; pItems[nMid].nPOS &gt; nPOS &amp;&amp; nPOS != -1)) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nEnd = nMid - 1; <br>
				<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nMid = (nStart + nEnd) / 2; <br>
&nbsp;&nbsp; } <br>
&nbsp;&nbsp; <span style="COLOR: #0000ff">return</span>
				<span style="COLOR: #0000ff">false</span>; <br>
				} <br>
			</div>
		</div>
		<p>其它功能在这里就不再介绍了。</p>
		<ul>
			<li><font color="#800080"><b>小结</b></font></li>
		</ul>
		<p>1、WordDictionary类实现了对字典的读取、写入、更改、检索等功能。</p>
		<p>2、词典中记录了以6768个汉字打头的词、词性、出现频率的信息，具体结构需要了解。</p>
		<p>　</p>
		</td>
	</tr>
</table>

</body>

</html>
